{"version":3,"sources":["styles/images/gitlab.png","App.js","components/HomePageComponent.js","components/ListUrlComponent.js","components/AddGitURL.js","routers/AppRouter.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","fetch","method","headers","Accept","Content-Type","body","then","res","json","console","log","react_default","a","createElement","className","src","logo","alt","Button_default","id","href","Component","HomePageComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleToggle","setState","prevState","open","handleClose","event","anchorEl","contains","target","state","listdata","data","url","status","_this2","AppBar_default","position","Toolbar_default","Link","to","IconButton_default","color","aria-label","Home_default","Typography_default","variant","buttonRef","node","aria-owns","undefined","aria-haspopup","onClick","Avatar_default","class","Popper_default","transition","disablePortal","_ref","TransitionProps","placement","Grow_default","assign","style","transformOrigin","Paper_default","ClickAwayListener_default","onClickAway","MenuList_default","testdata","name","username","email","web_url","MenuItem_default","React","ListUrlComponent","handleExpandClick","cardNumber","expanded","objectSpread","defineProperty","handleDownloadLog","x","item","concat","app_name","blob","window","resp","ipaddress","Rx","fromPromise","subscribe","deploy_history","temp","reverse","splice","length","_this3","_this$state","classes","components_HomePageComponent","map","i","_React$createElement","Card_default","CardHeader_default","action","marginRight","marginTop","appId","Clear_default","CheckCircle_default","title","subheader","moment","timestamp","fromNow","root","marginLeft","classnames","expand","expandOpen","ExpandMore_default","index","Collapse_default","in","timeout","unmountOnExit","CardContent_default","withStyles","theme","transform","transitions","create","duration","shortest","breakpoints","up","AddGitURL","handleOpen","password","handleClickButton","loading","document","getElementById","value","handleChange","e","context","socket","io","fromEvent","pipe","filter","collector","JSON","stringify","on","display","innerHTML","elevation","TextField_default","label","type","autoComplete","margin","onPress","FormControlLabel_default","control","Checkbox_default","onChange","maxHeight","overflow","padding","background","fontSize","List_default","AppRouter","HashRouter","Route","path","component","exact","Switch","Boolean","location","hostname","match","ReactDOM","render","routers_AppRouter","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1004b185.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gitlab.11d38b71.png\";","import React, { Component } from 'react';\nimport logo from './styles/images/gitlab.png';\nimport Button from '@material-ui/core/Button';\nimport './App.css';\n\nclass App extends Component {\n\n  test() {\n    const url = \"https://github.com/ishawakankar/test2.git\";\n    fetch(`/deploy`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: url\n    })\n      .then(res => { return res.json() })\n      .then(res => console.log(res))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <header className=\"App-header\">\n          <div className=\"appname\">\n            Application Deployment Platform</div>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <Button className=\"App-link\" id=\"loginButton\" href={`/newApp`}>\n            LOGIN </Button>\n          {/* <button onClick={this.test}> test </button> */}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/*eslint react/jsx-filename-extension: 0 */\n\nimport React from 'react';\nimport \"isomorphic-fetch\"\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport * as Rx from 'rxjs-compat';\nimport Avatar from '@material-ui/core/Avatar';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Grow from '@material-ui/core/Grow';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Home from '@material-ui/icons/Home';\nimport { Link } from 'react-router-dom';\nimport '../styles/homepage.css';\n\n\n\nclass HomePageComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      listdata: [],\n      data: [],\n      url: \"\",\n      status: false,\n      open: false\n    };\n  }\n\n  componentWillMount() {\n    \n  }\n\n  handleToggle = () => {\n    // this.setState(state => ({ open: !state.open }));\n    this.setState(prevState => ({\n      open: !prevState.open\n    }))\n  };\n\n  handleClose = event => {\n    if (this.anchorEl.contains(event.target)) {\n      return;\n    }\n\n    // this.setState({ open: false });\n    this.setState(prevState => ({\n      open: !prevState.open\n    }))\n  };\n\n  render() {\n\n    const { open } = this.state;\n    return (\n\n      <div className=\"root\">\n\n        <AppBar position=\"static\" className=\"app\" >\n          <Toolbar className=\"iconss\">\n            <Link to={`/home`} className=\"lnk\">\n              <IconButton className=\"menuButton\" color=\"inherit\" aria-label=\"Menu\">\n                <Home />\n              </IconButton>\n            </Link>\n            <Link to={`/listUrl`} className=\"lnk\">\n              <Typography variant=\"h6\" color=\"inherit\" className=\"grow\">\n                App\n          </Typography>\n            </Link>\n            <Link to={`/newApp`} className=\"lnk\">\n              <Typography variant=\"h6\" color=\"inherit\" className=\"grow\">\n                NewApp\n          </Typography>\n            </Link>\n\n            {/* <span className=\"heading\">\n          Rx-Actor Model</span> */}\n\n\n            <div className=\"root\">\n              <Button\n                buttonRef={node => {\n                  this.anchorEl = node;\n                }}\n                aria-owns={open ? 'menu-list-grow' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleToggle}\n                className=\"button2\"\n                variant=\"persistent\"\n              >\n                <Avatar\n                  alt=\"Thumb\"\n                  // src=\"https://upload.wikimedia.org/wikipedia/commons/f/f4/User_Avatar_2.png\"\n                  src={this.state.url}\n\n                />\n                &nbsp;&nbsp;\n                <i class=\"fa fa-chevron-down\"></i>\n              </Button>\n              <Popper open={open} anchorEl={this.anchorEl} transition disablePortal className=\"profiledata\">\n                {({ TransitionProps, placement }) => (\n                  <Grow\n                    {...TransitionProps}\n                    id=\"menu-list-grow\"\n                    style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                  >\n                    <Paper>\n                      <ClickAwayListener onClickAway={this.handleClose}>\n                        <MenuList>\n                          <h3><strong>{this.state.data.testdata.name}</strong></h3>\n                          <div className=\"username\">@{this.state.data.testdata.username}\n                            <br /> {this.state.data.testdata.email}\n                          </div>\n                          <hr />\n                          <Button href={this.state.data.testdata.web_url} target=\"_blank\"\n                            className=\"buttonmenu\" >\n                            <MenuItem>Go to gitlab</MenuItem></Button>\n                          <Button href={`/logout`} className=\"buttonmenu\" target=\"_self\">\n                            <MenuItem>Logout</MenuItem></Button>\n                        </MenuList>\n                      </ClickAwayListener>\n                    </Paper>\n                  </Grow>\n                )}\n              </Popper>\n            </div>\n\n\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default (HomePageComponent);","// /*eslint react/jsx-filename-extension: 0 */\n// /*eslint react/prop-types: 0 */\n// /* eslint array-callback-return:0 */\n\n// import \"isomorphic-fetch\";\n// import React from 'react';\n// import Card from '@material-ui/core/Card';\n// import CardHeader from '@material-ui/core/CardHeader';\n// import classnames from 'classnames';\n// import { withStyles } from '@material-ui/core/styles';\n// import Avatar from '@material-ui/core/Avatar';\n// import CheckCircle from '@material-ui/icons/CheckCircle';\n// import Clear from '@material-ui/icons/Clear';\n// import CardContent from '@material-ui/core/CardContent';\n// import Collapse from '@material-ui/core/Collapse';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// import ClickAwayListener from '@material-ui/core/ClickAwayListener';\n// import Grow from '@material-ui/core/Grow';\n// import Paper from '@material-ui/core/Paper';\n// import Popper from '@material-ui/core/Popper';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import MenuList from '@material-ui/core/MenuList';\n// import moment from 'moment';\n\n// import HomePageComponent from './HomePageComponent';\n// import '../styles/ListUrlComponent.css';\n// import * as Rx from 'rxjs-compat'\n// // const publicIP = require('public-ip');\n// // const data = require('../logs/client-server-db-docker.log');\n\n// const styles = theme => ({\n//   expand: {\n//     transform: 'rotate(0deg)',\n//     transition: theme.transitions.create('transform', {\n//       duration: theme.transitions.duration.shortest,\n//     }),\n//     marginLeft: 'auto',\n//     [theme.breakpoints.up('sm')]: {\n//       marginRight: -8,\n//     },\n//   },\n//   expandOpen: {\n//     transform: 'rotate(180deg)',\n//   },\n// });\n\n// class ListUrlComponent extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       listdata: [],\n//       data: [],\n//       expanded: {},\n//       ipaddress: '',\n//       open: false\n//     };\n//   }\n\n//   handleClose = () => {\n//     this.setState(prev => ({\n//       expanded: {\n//         ...this.state.expanded,\n//         [cardNumber]: !this.state.expanded[cardNumber]\n//       }\n//     }));\n//   };\n\n//   // handleExpandClick = (cardNumber) => {\n//   //   this.setState({\n//   //     expanded: {\n//   //       ...this.state.expanded,\n//   //       [cardNumber]: !this.state.expanded[cardNumber]\n//   //     }\n//   //   });\n//   // };\n\n//   componentWillMount() {\n//     Rx.Observable.fromPromise(fetch('/apps').then((data) => data.json()))\n//       .subscribe((data) => {\n//         console.log(\"data fetched\", data);\n//         console.log('viewing dep history', data[0].deploy_history)\n//         var temp = data[0].deploy_history;\n//         temp = temp.reverse();\n//         temp = temp.splice(0, temp.length - 1);\n//         data[0].deploy_history = temp;\n//         this.setState({\n//           data: data\n//         })\n//       });\n//   }\n\n//   handleDownloadLog = (x, item) => {\n//     // console.log('inside test function', x);\n//     fetch(`/downloadLog/${x.app_name}/${item}`)\n//       .then((data) => {\n//         data.blob();\n//         // console.log(\"data: \", data)\n//         window.open(data.url)\n//       })\n//       .then(resp => {\n//         // console.log(\"this is resp: \", resp);\n//         return resp;\n//       });\n\n//   }\n\n//   render() {\n//     const { data, expanded, open } = this.state;\n//     const { classes } = this.props;\n\n//     return (\n//       <div>\n//         <HomePageComponent />\n//         {data.map((x, i) =>\n//           <div className=\"root\">\n//             <Card className=\"card\">\n//               <CardHeader\n//                 action={\n//                   <Avatar aria-label=\"Deployed\" className=\"checkavatar\"\n//                     style={{ color: \"yellowgreen\", marginRight: 40, marginTop: 13 }} >\n//                     {x.appId === \"-1\" ?\n//                       <Clear style={{ color: \"red\" }} /> :\n//                       <CheckCircle style={{ color: \"green\" }} />\n//                     }\n//                   </Avatar>\n//                 }\n//                 className=\"appinfo\"\n//                 title={x.app_name}\n//                 subheader={moment(x.timestamp).fromNow()}\n//               />\n\n//               <IconButton\n//                 className={classnames(classes.expand, {\n//                   [classes.expandOpen]: expanded[i],\n//                 })}\n//                 //className={this.state.expanded[i] ? classes.expandOpen : \"toggleContent-closed\"}\n//                 onClick={() => this.handleExpandClick(i)}\n//                 aria-label=\"Show more\"\n//               >\n//                 <ExpandMoreIcon />\n//               </IconButton>\n\n//               <div className={classes.root}>\n//                 <div>\n//                   <Button className=\"download\"\n//                     onClick={() => this.handleClose(i)}\n//                   >\n//                     Download previous logs &nbsp;\n//                   <i class=\"fa fa-chevron-down fa-list\"></i>\n//                   </Button>\n//                   <Popper open={expanded} anchorEl={this.anchorEl} transition disablePortal>\n//                     {({ TransitionProps, placement }) => (\n//                       <Grow\n//                         {...TransitionProps}\n//                         id=\"menu-list-grow\"\n//                         style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n//                       >\n//                         <Paper>\n//                           <ClickAwayListener onClickAway={() => this.handleClose(i)}>\n\n\n//                             <MenuList>\n\n//                               {x.deploy_history.map((item, index) =>\n\n//                                 <MenuItem onClick={() => this.handleDownloadLog(x, item)}>{item}</MenuItem>\n\n//                               )}\n//                             </MenuList>\n//                           </ClickAwayListener>\n//                         </Paper>\n//                       </Grow>\n//                     )}\n//                   </Popper>\n//                 </div>\n//               </div>\n\n//               <Button variant=\"persistent\"\n//                 className=\"download\" onClick={() => this.handleDownloadLog(x, x.timestamp)}>\n//                 Download recent log  </Button>\n\n//               <Collapse in={expanded[i]} timeout=\"auto\" unmountOnExit>\n//                 <CardContent>\n//                 </CardContent>\n//               </Collapse>\n\n\n//             </Card>\n//           </div>\n//         )\n//         }\n//         <div className=\"deploybutton\">\n//           <Button variant=\"persistent\" href='http://enginedeploy.com' target=\"_blank\">\n//             View Client-DB-Docker</Button>\n\n//           <Button variant=\"persistent\" href='http://githubDemo.com' target=\"_blank\">\n//             View Deployment-testing</Button>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// //export default (ListUrlComponent);\n// export default withStyles(styles)(ListUrlComponent);\n\n\n/*eslint react/jsx-filename-extension: 0 */\n/*eslint react/prop-types: 0 */\n/* eslint array-callback-return:0 */\nimport \"isomorphic-fetch\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport classnames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport Clear from '@material-ui/icons/Clear';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport moment from 'moment';\nimport HomePageComponent from './HomePageComponent';\nimport '../styles/ListUrlComponent.css';\nimport * as Rx from 'rxjs-compat'\n// const publicIP = require('public-ip');\n// const data = require('../logs/client-server-db-docker.log');\nconst styles = theme => ({\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n    marginLeft: 'auto',\n    [theme.breakpoints.up('sm')]: {\n      marginRight: -8,\n    },\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n});\nclass ListUrlComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listdata: [],\n      data: [],\n      expanded: {},\n      ipaddress: '',\n    };\n  }\n  state = {\n    open: false,\n  };\n  handleToggle = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n  handleClose = event => {\n    if (this.anchorEl.contains(event.target)) {\n      return;\n    }\n    this.setState({ open: false });\n  };\n  handleExpandClick = (cardNumber) => {\n    this.setState({\n      expanded: {\n        ...this.state.expanded,\n        [cardNumber]: !this.state.expanded[cardNumber]\n      }\n    });\n  };\n  componentWillMount() {\n    Rx.Observable.fromPromise(fetch('/apps').then((data) => data.json()))\n      .subscribe((data) => {\n        console.log(\"data fetched\", data);\n        console.log('viewing dep history', data[0].deploy_history)\n        // data[0].deploy_history = data[0].deploy_history.splice(0,1);\n        // console.log('viewing spliced dep history', data[0].deploy_history)\n        var temp = data[0].deploy_history;\n        temp = temp.reverse();\n        temp = temp.splice(0, temp.length - 1);\n        data[0].deploy_history = temp;\n        this.setState({\n          data: data\n        })\n      });\n  }\n  handleDownloadLog = (x, item) => {\n    // console.log('inside test function', x);\n    fetch(`/downloadLog/${x.app_name}/${item}`)\n      .then((data) => {\n        data.blob();\n        // console.log(\"data: \", data)\n        window.open(data.url)\n      })\n      .then(resp => {\n        // console.log(\"this is resp: \", resp);\n        return resp;\n      });\n  }\n  render() {\n    const { data, expanded } = this.state;\n    const { classes } = this.props;\n    const { open } = this.state;\n    // this.state.data.map((x, i) => {\n    //   x.timestamp = moment(x.timestamp).fromNow();\n    // }\n    // )\n    // publicIP.v4().then(ip => {\n    //   this.setState({\n    //     ipaddress: ip,\n    //   })\n    // })\n    // console.log(data)\n    // x.deploy_history.splice(0,1);\n    return (\n      <div>\n        <HomePageComponent />\n        {data.map((x, i) =>\n          <div className=\"root\">\n            <Card className=\"card\">\n              {/* {console.log('name is: ', x.deploy_history)} */}\n              {/* {console.log('map i', i)} */}\n              <CardHeader\n                action={\n                  <Avatar aria-label=\"Deployed\" className=\"checkavatar\"\n                    style={{ color: \"yellowgreen\", marginRight: 40, marginTop: 13 }} >\n                    {/* {console.log(\"id check: \", typeof (x.appId), \" \", x.appId)} */}\n                    {x.appId === \"-1\" ?\n                      <Clear style={{ color: \"red\" }} /> :\n                      <CheckCircle style={{ color: \"green\" }} />\n                    }\n                  </Avatar>\n                }\n                className=\"appinfo\"\n                title={x.app_name}\n                subheader={moment(x.timestamp).fromNow()}\n              />\n\n\n              {/* <IconButton\n                className={classnames(classes.expand, {\n                  [classes.expandOpen]: expanded[i],\n                })}\n                //className={this.state.expanded[i] ? classes.expandOpen : \"toggleContent-closed\"}\n                onClick={() => this.handleExpandClick(i)}\n                aria-label=\"Show more\"\n              >\n                <ExpandMoreIcon />\n              </IconButton> */}\n\n\n\n\n\n              <div className={classes.root}>\n                <div style={{ marginLeft: '10px' }}>\n                  Download previous logs\n                  <IconButton\n                    className={classnames(classes.expand, {\n                      [classes.expandOpen]: expanded[i],\n                    })}\n                    className={this.state.expanded[i] ? classes.expandOpen : \"toggleContent-closed\"}\n                    onClick={() => this.handleExpandClick(i)}\n                    aria-label=\"Show more\"\n                  >\n                    <ExpandMoreIcon />\n                  </IconButton>\n                  <Popper open={expanded[i]} className=\"popper-s\" anchorEl={this.anchorEl} transition disablePortal>\n                    {({ TransitionProps, placement }) => (\n                      <Grow\n                        {...TransitionProps}\n                        id=\"menu-list-grow\"\n                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                      >\n                        <Paper>\n                          <ClickAwayListener onClickAway={this.handleClose}>\n                            <MenuList>\n                              {x.deploy_history.map((item, index) =>\n                                <MenuItem onClick={() => this.handleDownloadLog(x, item)}>{item}</MenuItem>\n                              )}\n                            </MenuList>\n                          </ClickAwayListener>\n                        </Paper>\n                      </Grow>\n                    )}\n                  </Popper>\n                </div></div>\n\n\n\n\n\n\n\n\n              {/* <div className={classes.root}>\n                <div>\n                  <Button className=\"download\"\n                    buttonRef={node => {\n                      this.anchorEl = node;\n                    }}\n                    aria-owns={open ? 'menu-list-grow' : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={this.handleToggle}\n                  >\n                    Download previous logs &nbsp;\n            <i class=\"fa fa-chevron-down fa-list\"></i>\n                  </Button>\n                  <Popper open={open} anchorEl={this.anchorEl} transition disablePortal>\n                    {({ TransitionProps, placement }) => (\n                      <Grow\n                        {...TransitionProps}\n                        id=\"menu-list-grow\"\n                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                      >\n                        <Paper>\n                          <ClickAwayListener onClickAway={this.handleClose}>\n                            <MenuList>\n                              {x.deploy_history.map((item, index) =>\n                                <MenuItem onClick={() => this.handleDownloadLog(x, item)}>{item}</MenuItem>\n                              )}\n                            </MenuList>\n                          </ClickAwayListener>\n                        </Paper>\n                      </Grow>\n                    )}\n                  </Popper>\n                </div>\n              </div> */}\n              <Button variant=\"persistent\"\n                className=\"download\" onClick={() => this.handleDownloadLog(x, x.timestamp)}>\n                Download recent log  </Button>\n              <Collapse in={expanded[i]} timeout=\"auto\" unmountOnExit>\n                <CardContent>\n                </CardContent>\n              </Collapse>\n            </Card>\n          </div>\n        )\n        }\n        <div className=\"deploybutton\">\n          <Button variant=\"persistent\" href='http://engineDeploy.com' target=\"_blank\">\n            View ClientServer DB Docker</Button>\n          <Button variant=\"persistent\" href='http://logo.com' target=\"_blank\">\n            View Deployment-testing</Button>\n        </div>\n      </div>\n    );\n  }\n}\n//export default (ListUrlComponent);\nexport default withStyles(styles)(ListUrlComponent);","/*eslint react/jsx-filename-extension: 0 */\n/* eslint react/forbid-prop-types: 0 */\nimport React from 'react';\nimport { fromEvent } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport io from 'socket.io-client';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List'\nimport HomePageComponent from './HomePageComponent';\n// import ProgressBar from './LoadingSpinner';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport '../styles/AddGitUrl.css';\n// const env = require('../../../env_config');\n\n\nclass AddGitURL extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      context: '',\n      open: false,\n      username: '',\n      password: '',\n    }\n  }\n\n  handleOpen = () => {\n    // const hookenable = document.getElementById(\"webhook\").checked\n    // if (hookenable) {\n    //   this.setState({ open: true })\n    // }\n    // else {\n    //   this.setState({ open: false })\n    // }\n    this.setState(prevState => ({\n      open: !prevState.open\n    }))\n    console.log('username:', this.state.username)\n    console.log('pass:', this.state.password)\n  }\n\n  componentDidMount() {\n    const socket = io();\n    console.log('before rxjs');\n    fromEvent(document.getElementById(\"outlined-email-input\"), \"click\")\n      .pipe(map(() => {\n        return {\n          'url': document.getElementById(\"outlined-email-input2\").value,\n          'username': this.state.username,\n          'password': this.state.password\n        };\n\n      }),\n        filter((data) => {\n          return data.url !== \"\"\n        }))\n      .subscribe((collector) => {\n\n\n        console.log('THIS IS THE URL: *********** ', collector);\n        fetch(`/deploy`, {  //no string literals\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            \"collector\": collector\n          })\n        })\n          .then(res => res.json())\n        // .then(res => {\n        //   if (res) {\n        //     console.log('response is: ', res);\n        //     this.setState({ context: '' })\n        //   }\n        //   return res;\n        // })\n        // .then(res => console.log('this is res: ', res))\n      })\n\n    socket.on('chat', (data) => {\n      document.getElementById(\"logger\").style.display = 'block';\n      document.getElementById(\"logger\").innerHTML += `${data} <br/>`;\n    })\n\n  }\n\n  handleClickButton = () => {\n    console.log('inside handleClickButton', this.state.loading);\n    if (document.getElementById(\"outlined-email-input2\").value) {\n      this.setState({\n        // context: <ProgressBar />,\n        open: false\n      })\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  render() {\n    const { context } = this.state;\n    return (\n      <div className=\"main\">\n        <HomePageComponent />\n        <Paper className=\"root1\" elevation={20}>\n          <div className=\"text1\">\n            <TextField\n              id=\"outlined-email-input2\"\n              label=\"GitURL\"\n              className=\"textField1\"\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              className=\"button1\"\n              id=\"outlined-email-input\"\n              name=\"buttonSubmit\"\n              onClick={this.handleClickButton}\n              onPress={this.props.onClick}\n            >\n              Deploy\n            </Button>\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  id=\"webhook\"\n                  onChange={this.handleOpen}\n                  value=\"checkedB\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Use webhook\"\n            />\n            *Provide your GITHUB credentials\n            {\n              this.state.open ?\n                <div>\n                  <TextField id=\"username\"\n                    onChange={e => this.handleChange(e)}\n                    value={this.state.username}\n                    label=\"Username\"\n                    type=\"text\"\n                    name=\"username\"\n                    margin=\"normal\"\n                  /> &nbsp;&nbsp;&nbsp;\n                  <TextField id=\"password\"\n                    onChange={e => this.handleChange(e)}\n                    value={this.state.password}\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    margin=\"normal\"\n\n                  />&nbsp;&nbsp;&nbsp;\n                  <Button onClick={this.handleOpen} color=\"primary\" margin=\"normal\"\n                    variant=\"outlined\" style={{ 'marginTop': '5%' }} >\n                    Submit\n                  </Button>\n                </div>\n                : null\n            }\n\n            {context}\n          </div>\n        </Paper>\n\n        <Paper id=\"logger\" className={\"root2\"} style={{ maxHeight: 150, overflow: 'auto', padding: 20, background: \"black\", color: \"white\", display: 'none', fontSize: '0.8rem' }}>\n          <List>\n\n          </List>\n        </Paper>\n\n      </div>\n    )\n  }\n}\n\nexport default AddGitURL;\n\n\n","/*eslint react/jsx-filename-extension: 0 */\n\nimport React from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport App from '../App';\nimport ListUrlComponent from '../components/ListUrlComponent';\nimport AddGitURL from '../components/AddGitURL';\n\n\nfunction AppRouter () {\n   return ( <HashRouter>\n    <div>\n        <Route  path='/' component={App} exact={true} />\n        <Switch>\n            <Route  path='/home'  component={AddGitURL}  />\n            <Route  path='/listUrl'  component={ListUrlComponent} />\n            <Route  path='/newApp'  component={AddGitURL} />\n        </Switch>\n    </div>\n    </HashRouter>)\n}\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport AppRouter from './routers/AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}